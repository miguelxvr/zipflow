# Multi-stage build for AWS Lambda
FROM node:22-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Set working directory
WORKDIR /app

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.14.4 --activate

# Copy package files
COPY package.json pnpm-lock.yaml* pnpm-workspace.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY src ./src
COPY tsconfig.json ./

# Build application
RUN pnpm build

# Lambda runtime stage - using AWS provided base image
FROM public.ecr.aws/lambda/nodejs:22 AS lambda

# Copy package files
COPY package.json pnpm-lock.yaml* pnpm-workspace.yaml ./

# Install pnpm
RUN npm install -g pnpm@9.14.4

# Install production dependencies
RUN pnpm install --prod --frozen-lockfile

# Copy built application from builder
COPY --from=builder /app/dist ./dist

# Set Lambda handler
CMD ["dist/handlers/lambda.handler"]

